{
  "openapi": "3.0.1",
  "info": {
    "title": "Adventure Builder API",
    "description": "An API for retrieving levels, leaderboards, assets, and user information in the Adventure Builder game.",
    "license": {
      "name": "MIT"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://api.adventure-builder.net"
    }
  ],
  "security": [],
  "paths": {
    "/v1/level/{level-id}": {
      "get": {
        "description": "Returns the data of a specific level by its level-id.",
        "parameters": [
          {
            "name": "level-id",
            "in": "path",
            "description": "The ID of the level.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Level response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Level"
                }
              }
            }
          },
          "404": {
            "description": "Level not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/level-list": {
      "get": {
        "description": "Returns a paginated list of levels based on specified criteria.",
        "parameters": [
          {
            "name": "category",
            "in": "query",
            "description": "The category to filter levels by.",
            "required": false,
            "schema": {
              "type": "string",
              "enum": [
                "popular",
                "featured",
                "new"
              ],
              "default": "popular"
            }
          },
          {
            "name": "user-ids",
            "in": "query",
            "description": "The IDs of the users to filter levels by.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "The page number of results to return.",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "The number of items to return per page.",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Paginated list of levels",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "levels": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Level"
                      }
                    },
                    "pagination": {
                      "type": "object",
                      "properties": {
                        "total": {
                          "type": "integer",
                          "description": "Total number of levels matching the query"
                        },
                        "page": {
                          "type": "integer",
                          "description": "Current page number"
                        },
                        "per_page": {
                          "type": "integer",
                          "description": "Number of items per page"
                        },
                        "total_pages": {
                          "type": "integer",
                          "description": "Total number of pages"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid parameters",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/leaderboard/{level-id}": {
      "get": {
        "description": "Returns the leaderboard entries for a specific level.",
        "parameters": [
          {
            "name": "level-id",
            "in": "path",
            "description": "The ID of the level.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "The maximum number of entries to return.",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 30,
              "maximum": 30
            }
          },
          {
            "name": "userIds",
            "in": "query",
            "description": "Filter by an array of user IDs.",
            "required": false,
            "schema": {
              "type": "array",
              "default": [],
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Leaderboard entries",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LeaderboardEntry"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid limit parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "No leaderboard entries found for this level",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/assets": {
      "servers": [
        {
          "url": "https://thumbnails.roblox.com"
        }
      ],
      "get": {
        "description": "Returns the images for given thumbnail IDs.",
        "parameters": [
          {
            "name": "assetIds",
            "in": "query",
            "description": "The IDs of the thumbnails.",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the thumbnail.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "30x30",
                "42x42",
                "50x50",
                "60x62",
                "75x75",
                "110x110",
                "140x140",
                "150x150",
                "160x100",
                "160x600",
                "250x250",
                "256x144",
                "300x250",
                "304x166",
                "384x216",
                "396x216",
                "420x420",
                "480x270",
                "512x512",
                "576x324",
                "700x700",
                "728x90",
                "768x432",
                "1200x80"
              ]
            }
          },
          {
            "name": "format",
            "in": "query",
            "description": "The format of the thumbnail.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "Png",
                "Jpeg",
                "Webp"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Asset thumbnail response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AssetThumbnail"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/{user-id}": {
      "servers": [
        {
          "url": "https://users.roblox.com"
        }
      ],
      "get": {
        "description": "Returns information about a specific Roblox user.",
        "parameters": [
          {
            "name": "user-id",
            "in": "path",
            "description": "The ID of the user.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User information response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserInfo"
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Level": {
        "type": "object",
        "properties": {
          "level_id": {
            "type": "integer",
            "description": "The ID of the level."
          },
          "name": {
            "type": "string",
            "description": "The name of the level."
          },
          "description": {
            "type": "string",
            "description": "A brief description of the level."
          },
          "creator_id": {
            "type": "integer",
            "description": "The user ID of the creator."
          },
          "play_count": {
            "type": "integer",
            "description": "Number of times the level has been played."
          },
          "like_count": {
            "type": "integer",
            "description": "Number of likes for the level."
          }
        }
      },
      "LeaderboardEntry": {
        "type": "object",
        "properties": {
          "rank": {
            "type": "integer",
            "description": "The rank of the player."
          },
          "user_id": {
            "type": "integer",
            "description": "The user ID of the player."
          },
          "score": {
            "type": "integer",
            "description": "The score of the player."
          }
        }
      },
      "AssetThumbnail": {
        "type": "object",
        "properties": {
          "asset_id": {
            "type": "integer",
            "description": "The ID of the asset."
          },
          "image_url": {
            "type": "string",
            "description": "The URL of the image."
          }
        }
      },
      "UserInfo": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer",
            "description": "The user ID of the Roblox user."
          },
          "username": {
            "type": "string",
            "description": "The username of the Roblox user."
          },
          "avatar_url": {
            "type": "string",
            "description": "The avatar URL of the user."
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "Error code."
          },
          "message": {
            "type": "string",
            "description": "Error message."
          }
        }
      }
    }
  }
}
